{"version":3,"sources":["About/Siming_Yang_Resume.pdf","About/About.js","navigation/navigation.js","projects/projectcards.js","projects/images/Database.png","projects/images/topstars.png","projects/Projects.js","Footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["About","openLink","link","window","open","id","Jumbotron","fluid","className","Container","style","all","href","icon","faEnvelope","size","onClick","faFileAlt","faGithubSquare","faLinkedin","document","getElementById","scrollIntoView","behavior","width","faChevronDown","Component","ProjectCard","title","description","thumbnail","technologies","githublink","bulletPoints","ImageHalf","height","borderRadius","src","alt","descHalf","undefined","textAlign","map","val","key","tech","i","variant","Button","Projects","hsw_thumb","ustar_thumb","Footer","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d8a87f37.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Siming_Yang_Resume.bbf1ed28.pdf\";","import React, { } from 'react';\r\nimport './About.css';\r\n// Bootstrap\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Jumbotron, Container, Button } from 'react-bootstrap';\r\n\r\nimport resume from './Siming_Yang_Resume.pdf';\r\n\r\nimport { faFileAlt, faEnvelope, faChevronDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { faLinkedin, faGithubSquare, } from '@fortawesome/free-brands-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst About = () => {\r\n\r\n  const openLink = (link) => {\r\n    window.open(link, '_blank')\r\n  }\r\n\r\n  return (\r\n    <div id=\"About\">\r\n      <Jumbotron fluid className=\"header-background\">\r\n        <Container className=\"text-center\">\r\n          <h1 className=\"header-name\"><b>Siming Yang</b></h1>\r\n          <h1>Cool Dude</h1>\r\n          <div className=\"button-bar\">\r\n            <button className=\"link-buttons\">\r\n            <a style={{all: 'unset'}} href=\"mailto:yang.siming@outlook.com?subject=Mail From the Portfolio\">\r\n              <div>\r\n              <FontAwesomeIcon className=\"font-awsome-icon\" icon={faEnvelope} size=\"lg\"/>\r\n              Email\r\n              </div>\r\n            </a>\r\n            </button>\r\n            <button onClick={()=>openLink('https://docs.google.com/document/d/1XobSq-yw2Ghcf-QTAg7a-nwWmMG9v8olhy9_N5DbRtE/edit?usp=sharing')} className=\"link-buttons\">\r\n              <div>\r\n                <FontAwesomeIcon className=\"font-awsome-icon\" icon={faFileAlt} size=\"lg\"/>\r\n                Résumé\r\n              </div>\r\n            </button>\r\n            <button onClick={()=>openLink(\"https://github.com/YangSiming99\")} className=\"link-buttons\">\r\n              <div>\r\n                <FontAwesomeIcon className=\"font-awsome-icon\" icon={faGithubSquare} size=\"lg\"/>\r\n                Github\r\n              </div>\r\n            </button>\r\n            <button onClick={()=>openLink(\"https://www.linkedin.com/in/siming-yang/\")} className=\"link-buttons\">\r\n              <div>\r\n                  <FontAwesomeIcon className=\"font-awsome-icon\" icon={faLinkedin} size=\"lg\"/>\r\n                  Linkedin\r\n                </div>\r\n            </button>\r\n          </div>\r\n        </Container>\r\n      </Jumbotron>\r\n      <div className=\"down-arrow\" onClick={()=> document.getElementById('projects').scrollIntoView({behavior: 'smooth'})}>\r\n        <FontAwesomeIcon style={{width:'100%'}} icon={faChevronDown} size=\"lg\"/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\n// Bootstrap\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nexport default class NavigationBar extends Component {\r\n\r\n  test = () => {\r\n    console.log(\"hello\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n        <Navbar.Brand href=\"#home\">Siming Yang</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link>Projects</Nav.Link>\r\n            <Nav.Link>Contact</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n}","import React, { Component } from \"react\";\r\n// Bootstrap\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport \"./project.css\";\r\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\r\n\r\n\r\nconst ProjectCard = ({ \r\n\ttitle,\r\n\tdescription,\r\n\tthumbnail, \r\n\ttechnologies, \r\n\tlink, \r\n\tgithublink, \r\n\tbulletPoints \r\n}) => {\r\n\tconst OpenLink = () => {\r\n\t\twindow.open(link, \"_blank\")\r\n\t}\r\n\r\n\tconst OpenGithublink = () => {\r\n\t\twindow.open(githublink, \"_blank\")\r\n\t}\r\n\r\n\tconst ImageHalf = (\r\n\t\t<div className=\"image-half\">\r\n\t\t\t<img \r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: '100%', \r\n\t\t\t\t\theight:'auto',\r\n\t\t\t\t\tborderRadius: '1em'\r\n\t\t\t\t}} \r\n\t\t\t\tclassName=\"card-image\" \r\n\t\t\t\tsrc={thumbnail}\r\n\t\t\t\talt=\"Descriptive\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n\r\n\tconst descHalf = (\r\n\t\t<div className=\"desc-half\">\r\n\t\t\t<h3>{title}</h3>\r\n\t\t\t{bulletPoints !== undefined \r\n\t\t\t? \r\n\t\t\t<ul style={{textAlign:'left'}}>\r\n\t\t\t\t{bulletPoints.map((val, key) => <li key={key}>{val}</li>)}\r\n\t\t\t</ul>\r\n\t\t\t:<></>}\r\n\t\t\t<p>{description}</p>\r\n\t\t\t<div className=\"toolbar\">\r\n\t\t\t\t{technologies.map(\r\n\t\t\t\t\t\t\t\t\t\t(tech, i) => <div className=\"tools\" variant=\"outline-success\" key={i}>{tech}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"link-bar\">\r\n\t\t\t\t{link !== undefined\r\n\t\t\t\t? <Button onClick={OpenLink} className=\"url-tools\">Open Site</Button>\r\n\t\t\t\t: <></>}\r\n\t\t\t\t{githublink !== undefined\r\n\t\t\t\t? \t\t\t\t<Button onClick={OpenGithublink} className=\"url-tools\">Github Repo</Button>\r\n\t\t\t\t: <></>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n\treturn (\r\n\t\t\t<div className=\"project-card\">\r\n\t\t\t\t{ImageHalf}\r\n\t\t\t\t{descHalf}\r\n\t\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ProjectCard;\r\n\r\n\t\t\t\t\t{/* <Col sm={12} md={12} lg={4} style={styles.card_image} className=\"justify-content-center\">\r\n\t\t\t\t\t\t<Card.Img variant=\"top\" style={styles.card_image} src={thumbnail} />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={12} md={12} lg={7}>\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t<Card.Title><h3>{title}</h3></Card.Title>\r\n\t\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t\t\t{description}\r\n\t\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t\t<Card.Text style={{ display: 'flex' }}>\r\n\t\t\t\t\t\t\t\t{technologies.map(\r\n\t\t\t\t\t\t\t\t\t(tech, i) => <div style={styles.tools} variant=\"outline-success\" key={i}>{tech}</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t\t\t<Button onClick={OpenLink} style={styles.urlTools}>Open Site</Button>\r\n\t\t\t\t\t\t\t\t<Button onClick={OpenGithublink} style={styles.urlTools}>Github Repo</Button>\r\n\t\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Col> */}","export default __webpack_public_path__ + \"static/media/Database.3943e581.png\";","export default __webpack_public_path__ + \"static/media/topstars.7ccbdadd.png\";","import React, { Component } from 'react';\r\n// Bootstrap\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport \"./project.css\";\r\nimport { Jumbotron, Container } from 'react-bootstrap';\r\n\r\nimport ProjectCard from './projectcards';\r\n\r\n//Thumbnails\r\nimport hsw_thumb from './images/Database.png'\r\nimport ustar_thumb from './images/topstars.png'\r\n\r\nconst Projects = () => {\r\n  const styles = {\r\n  }\r\n\r\n  return (\r\n    <div id=\"projects\">\r\n      <Jumbotron fluid>\r\n        <Container>\r\n          <h1>Featured Projects</h1>\r\n          <h5>A showcase of projects I've done</h5>\r\n        </Container>\r\n      </Jumbotron>\r\n      <div className=\"centerDiv\">\r\n        <ProjectCard\r\n          title=\"Hillside Wealth AutoStocks\"\r\n          bulletPoints = {[\r\n            `Backend implemented using NodeJS, Express, and PostgreSQL`,\r\n            `Frontend created using HTML5, CSS, Javascript, and Jquery`\r\n          ]}\r\n          description={`\r\n            2nd place winning BCIT Industry Sponsered Student Project. \r\n            A web application created to automate manual data entry tasks, \r\n            streamline the process of checking quartly reports, \r\n            and display important data summaries at a glance. \r\n            Currenty deployed online using Heroku.`}\r\n          thumbnail={hsw_thumb}\r\n          technologies={[\"HTML5\", \"CSS\", \"JavaScript\", \"Jquery\", \"NodeJS\", \"Express\", \"PostgreSQL\"]}\r\n          link=\"https://hillsidewealth-stocks.herokuapp.com/\"\r\n          githublink=\"https://github.com/HillsideWealth-CIT/HillsideWealth-AutoStocks\"\r\n        />\r\n        <ProjectCard\r\n          title=\"Portfolio Website\"\r\n          bulletPoints = {[\r\n            `Developed front end user interface using ReactJS, and CSS`,\r\n            `Responsive Web design allows for usability on both desktop and mobile devices`\r\n          ]}\r\n          description={`\r\n            The webpage you are currently on.\r\n            Was created using ReactJS and CSS.\r\n            Font Awsome was used for any icons used on this site.\r\n            Flex boxes and @media were used in the css to create a responsive web page that can be easily used across both desktop and mobile.\r\n            `}\r\n          thumbnail={hsw_thumb}\r\n          technologies={[\"ReactJS\", \"CSS\", \"Javascript\", \"Yarn\"]}\r\n          link=\"https://hillsidewealth-stocks.herokuapp.com/\"\r\n          githublink=\"https://github.com/HillsideWealth-CIT/HillsideWealth-AutoStocks\"\r\n        />\r\n        <ProjectCard\r\n          title=\"UStarLinks Web Application\"\r\n          bulletPoints = {[\r\n            `Developed different components and features using ReactJS`,\r\n            `Translated designs and wireframes into functional react components using JSX and CSS`\r\n          ]}\r\n          description={`\r\n          The main thing I was working on while I was employed at Madoor. \r\n          A social media platform that allowed people in post-secondary institutions earn money by answering questions from potential students. \r\n          I was mainly working on implementing planned features and fixing bugs.`}\r\n          thumbnail={ustar_thumb}\r\n          technologies={[\"ReactJS\", \"MaterialUI\", \"HTML5\", \"Sass\", \"MaterialUI\", \"Jira\", \"BitBucket\", \"MS Teams\"]}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;","import './footer.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <h5 className=\"footer-text\">\r\n        © Siming Yang\r\n      </h5>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport About from './About/About'\nimport NavigationBar from './navigation/navigation';\nimport Projects from './projects/Projects';\nimport Footer from './Footer/footer'\n\nclass App extends Component {\n\n  render () {\n    return (\n      <div>\n        {/* <NavigationBar /> */}\n\n        <About />\n        <Projects />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}